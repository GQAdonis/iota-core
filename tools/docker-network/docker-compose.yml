version: "3.9"
# Create a custom build that can be re-used within Docker network
x-build-iota-core: &iota-core_build
  context: ${DOCKER_BUILD_CONTEXT:-../../}
  dockerfile: ${DOCKERFILE_PATH:-./Dockerfile}
services:
  peer_master:
    build: *iota-core_build
    stop_grace_period: 1m
    command: >
      ${COMMON_CONFIG}
      ${MANUALPEERING_CONFIG}
      --p2p.seed=0x88ce2019dd99fd5a3c46e10ffc192549fc4491eee07552153ff66cf792b6a0af
      --blockIssuer.issuerAccount=0x11a37a8e65fe5dca25cbeb896000eca615eaf88b97ca8dc70d8b1839b53dbf1c
      --blockIssuer.privateKey=443a988ea61797651217de1f4662d4d6da11fd78e67f94511453bf6576045a05293dc170d9a59474e6d81cfba7f7d924c09b25d7166bcfba606e53114d0a758b
      --activity.ignoreBootstrapped=true
    volumes:
      - ./docker-network.snapshot:/app/data/snapshot.bin
      - ./config.json:/app/config.json:ro
    ports:
      - "8080:8080/tcp" # web API
      - "8081:8081/tcp" # dashboard
      - "6081:6061/tcp" # pprof
    networks:
      - iota-core

  peer_master2:
    image: docker-network-peer_master:latest
    stop_grace_period: 1m
    command: >
      ${COMMON_CONFIG}
      ${MANUALPEERING_CONFIG}
      --p2p.seed=0xf739eea09eb0f4820f26504a3135131a075089b4c901c19c2099513ee016f516
      --blockIssuer.issuerAccount=0xb562e31344f3056982db1331592946f4df92481208a7ca16014ede54ccbfa6d1
      --blockIssuer.privateKey=3a5d39f8b60367a17fd54dac2a32c172c8e1fd6cf74ce65f1e13edba565f281705c1de274451db8de8182d64c6ee0dca3ae0c9077e0b4330c976976171d79064
      --activity.ignoreBootstrapped=true
    volumes:
      - ./docker-network.snapshot:/app/data/snapshot.bin
      - ./config.json:/app/config.json:ro
    ports:
      - "8070:8080/tcp" # web API
      - "8071:8081/tcp" # dashboard
      - "6071:6061/tcp" # pprof
    networks:
      - iota-core

  faucet:
    image: docker-network-peer_master:latest
    stop_grace_period: 1m
    command: >
      ${COMMON_CONFIG}
      ${MANUALPEERING_CONFIG}
      --p2p.seed=0x2ab2792bba8ab6deb7978165e4072d3f00def97a0138b98ba2d21eba54159705
      --blockIssuer.issuerAccount=0xe20f6f0982a184f07fed9e069e218d51f9678c8b49fd1311033e822e1b5901ed
      --blockIssuer.privateKey=db39d2fde6301d313b108dc9db1ee724d0f405f6fde966bd776365bc5f4a5fb31e4b21eb51dcddf65c20db1065e1f1514658b23a3ddbf48d30c0efc926a9a648
      --activity.ignoreBootstrapped=true
    volumes:
      - ./docker-network.snapshot:/app/data/snapshot.bin
      - ./config.json:/app/config.json:ro
    ports:
      - "8090:8080/tcp" # web API
      - "8091:8081/tcp" # dashboard
      - "6091:6061/tcp" # pprof
    networks:
      - iota-core

  peer_nomana:
    image: docker-network-peer_master:latest
    stop_grace_period: 1m
    command: >
      ${COMMON_CONFIG}
      ${MANUALPEERING_CONFIG}
      --blockIssuer.issuerAccount=0xa54fafa44a88e4a6a37796526ea884f613a24d84337871226eb6360f022d8b39
      --blockIssuer.privateKey=dcf7adb000f03826f1964a3e5378874b1972c38229fb740a8e47f2c421cddcf9a54fafa44a88e4a6a37796526ea884f613a24d84337871226eb6360f022d8b39
      --p2p.seed=0x6bd12a0398f9264788bc6481e2665eb90bd58a33b82347fb70f612cc8a91fcce
    volumes:
      - ./docker-network.snapshot:/app/data/snapshot.bin
      - ./config.json:/app/config.json:ro
    ports:
      - "8040:8080/tcp" # web API
      - "8041:8081/tcp" # dashboard
      - "6041:6061/tcp" # pprof
    networks:
      - iota-core

  peer_nomana2:
    image: docker-network-peer_master:latest
    stop_grace_period: 1m
    command: >
      ${COMMON_CONFIG}
      ${MANUALPEERING_CONFIG}
      --blockIssuer.issuerAccount=0xcb5ea14175ce649149ee41217c44aa70c3205b9939968449eae408727a71f91b
      --blockIssuer.privateKey=0d8ecad4cefe927d2b6c64ee56576c52450f9a7a0113f96683cf8e8cc5c64264cb5ea14175ce649149ee41217c44aa70c3205b9939968449eae408727a71f91b
      --p2p.seed=0x4da1119dc9cc3750ebb313c3c7dcb50120465544d256ee3c0d4586ce1772c96b
    volumes:
      - ./docker-network.snapshot:/app/data/snapshot.bin
      - ./config.json:/app/config.json:ro
    ports:
      - "8030:8080/tcp" # web API
      - "8031:8081/tcp" # dashboard
      - "6031:6061/tcp" # pprof
    networks:
      - iota-core

  prometheus:
    image: prom/prometheus:latest
    profiles:
      - grafana
    ports:
      - "9090:9090"
    command:
      - --config.file=/run/secrets/prometheus.yml
    secrets:
      - prometheus.yml
    networks:
      - iota-core
    depends_on:
      - peer_master

  grafana:
    image: grafana/grafana:latest
    profiles:
      - grafana
    environment:
      # path to provisioning definitions can only be defined as
      # environment variables for grafana within docker
      - GF_PATHS_PROVISIONING=/var/lib/grafana/provisioning
      - GF_ALERTING_ENABLED=true
      - GF_UNIFIED_ALERTING_ENABLED=false
    networks:
      - iota-core
    ports:
      - "3000:3000"
    user: "104"
    volumes:
      - grafana-data-volume:/var/lib/grafana
      - ./grafana/provisioning:/var/lib/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro

# Create our own network
networks:
  iota-core:
    driver: bridge
# Named Docker volumes for data persistence
volumes:
  grafana-data-volume:
# read only files to load in the containers that may be shared across containers
secrets:
  prometheus.yml:
    file: ${PROMETHEUS_CONFIG:-./prometheus.yml}
