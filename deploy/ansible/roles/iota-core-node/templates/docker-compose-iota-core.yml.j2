#jinja2: trim_blocks:True, lstrip_blocks:True
{% set ips = [] -%}
{% for interface in ansible_interfaces -%}
  {%- set interface_details = hostvars[inventory_hostname]['ansible_' + interface] %}
  {%- if interface_details.ipv4 is defined and 'address' in interface_details.ipv4 -%}
    {%- set _ = ips.append("/ip4/" + interface_details.ipv4.address + "/tcp/14666") -%}
  {%- endif -%}
{% endfor -%}
version: '3.3'

services:

###################
# IOTA-CORE Nodes #
###################

  iota_core:
    image: {{iota_core_docker_image_repo}}:{{iota_core_docker_image_tag}}
    container_name: iota-core
    stop_grace_period: 1m
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    ports:
      - "14666:14666/tcp" # P2P
      - "6061:6061/tcp"   # pprof
      - "8080:14265/tcp"  # REST-API
      - "8081:8081/tcp"   # Dashboard
      - "9311:9311/tcp"   # Prometheus
      - "9029:9029/tcp"   # INX
    volumes:
      - ./config.json:/app/config.json:ro
      - ./data:/app/data/
      - ./snapshot.bin:/app/data/snapshot.bin:ro
      - /etc/localtime:/etc/localtime:ro
    command: >
      -c
      config.json
      --logger.level=debug
      --logger.disableCaller=false
      --p2p.peers=/dns/node-01.feature/tcp/14666/p2p/12D3KooWCrjmh4dUCWfGVQT6ivzArieJB9Z3eKdy2mdEEN95NDPS
      --p2p.externalMultiAddresses={{ ips | join(',') }}
      --p2p.identityPrivateKey={{p2pIdentityPrvKey}}
      --p2p.db.path=/app/data/peerdb
      --profiling.enabled=true
      --profiling.bindAddress=0.0.0.0:6061
      --restAPI.bindAddress=0.0.0.0:14265
      --database.path=/app/data/database
      --protocol.snapshot.path=/app/data/snapshot.bin
      {% if 'node-01' in inventory_hostname or 'node-02' in inventory_hostname or 'node-03' in inventory_hostname %}
      --validator.enabled=true
        {% if 'node-01' in inventory_hostname %}
      --validator.ignoreBootstrapped=true
        {% endif %}
      --validator.account={{validatorAccount}}
      --validator.privateKey={{validatorPrvKey}}
      {% endif %}
      --dashboard.bindAddress=0.0.0.0:8081
      --metrics.bindAddress=iota-core:9311
      --inx.enabled=true
      --inx.bindAddress=iota-core:9029

##################
# INX Extensions #
##################

  inx-indexer:
    container_name: inx-indexer
    image: iotaledger/inx-indexer:2.0-alpha
    stop_grace_period: 1m
    restart: unless-stopped
    depends_on:
      iota-core:
        condition: service_started
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    volumes:
      - ./data:/app/database
    command: >
      --inx.address=iota-core:9029
      --indexer.db.sqlite.path=database/indexer
      --restAPI.bindAddress=inx-indexer:9091

{% if 'node-04' in inventory_hostname %}
  inx-blockissuer:
    container_name: inx-blockissuer
    image: iotaledger/inx-blockissuer:1.0-alpha
    stop_grace_period: 1m
    restart: unless-stopped
    depends_on:
      iota-core:
        condition: service_started
      inx-indexer:
        condition: service_started
    environment:
      - "BLOCKISSUER_PRV_KEY={{blockissuerPrvKey}}"
    command: >
      --inx.address=iota-core:9029
      --restAPI.bindAddress=inx-blockissuer:9086
      --blockIssuer.accountAddress=rms1pqas0clgfsf8du9e6dw0yx9nwclqe0dd4f728pvgmcshpscm8r5mkddrrfc
      --blockIssuer.proofOfWork.targetTrailingZeros=5

  inx-faucet:
    container_name: inx-faucet
    image: iotaledger/inx-faucet:2.0-alpha
    stop_grace_period: 1m
    restart: unless-stopped
    depends_on:
      iota-core:
        condition: service_started
      inx-indexer:
        condition: service_started
      inx-blockissuer:
        condition: service_started
    networks:
      - iota-core
    ports:
      - "8091:8091/tcp" # Faucet Frontend
    environment:
      - "FAUCET_PRV_KEY={{faucetPrvKey}}"
    command: >
      --inx.address=iota-core:9029
      --faucet.bindAddress=0.0.0.0:8091
{% endif %}