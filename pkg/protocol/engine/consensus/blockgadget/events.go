package blockgadget

import (
	"github.com/iotaledger/hive.go/runtime/event"
	"github.com/iotaledger/iota-core/pkg/protocol/engine/blocks"
)

type Events struct {
	BlockAccepted          *event.Event1[*blocks.Block]
	BlockConfirmed         *event.Event1[*blocks.Block]
	BlockRatifiedAccepted  *event.Event1[*blocks.Block]
	BlockRatifiedConfirmed *event.Event1[*blocks.Block]

	event.Group[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.CreateGroupConstructor(func() (newEvents *Events) {
	return &Events{
		BlockAccepted:          event.New1[*blocks.Block](),
		BlockConfirmed:         event.New1[*blocks.Block](),
		BlockRatifiedAccepted:  event.New1[*blocks.Block](),
		BlockRatifiedConfirmed: event.New1[*blocks.Block](),
	}
})
