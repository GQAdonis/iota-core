package spenddag

import (
	"github.com/iotaledger/hive.go/ds"
	"github.com/iotaledger/hive.go/runtime/event"
)

// region Events ///////////////////////////////////////////////////////////////////////////////////////////////////////

// Events is a container that acts as a dictionary for the events of a SpendDAG.
type Events[SpendID, ResourceID comparable] struct {
	// SpendCreated is triggered when a new Spend is created.
	SpendCreated *event.Event1[SpendID]

	// SpendEvicted is triggered when a Spend is evicted from the SpendDAG.
	SpendEvicted *event.Event1[SpendID]

	// ConflictingResourcesAdded is triggered when the Spend is added to a new ConflictSet.
	ConflictingResourcesAdded *event.Event2[SpendID, ds.Set[ResourceID]]

	// SpendParentsUpdated is triggered when the parents of a Spend are updated.
	SpendParentsUpdated *event.Event2[SpendID, ds.Set[SpendID]]

	// SpendAccepted is an event that gets triggered whenever a Spend is confirmed.
	SpendAccepted *event.Event1[SpendID]

	// SpendRejected is an event that gets triggered whenever a Spend is rejected.
	SpendRejected *event.Event1[SpendID]

	event.Group[Events[SpendID, ResourceID], *Events[SpendID, ResourceID]]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
func NewEvents[SpendID, ResourceID comparable](optsLinkTarget ...*Events[SpendID, ResourceID]) (events *Events[SpendID, ResourceID]) {
	return event.CreateGroupConstructor(func() (self *Events[SpendID, ResourceID]) {
		return &Events[SpendID, ResourceID]{
			SpendCreated:              event.New1[SpendID](),
			SpendEvicted:              event.New1[SpendID](),
			ConflictingResourcesAdded: event.New2[SpendID, ds.Set[ResourceID]](),
			SpendParentsUpdated:       event.New2[SpendID, ds.Set[SpendID]](),
			SpendAccepted:             event.New1[SpendID](),
			SpendRejected:             event.New1[SpendID](),
		}
	})(optsLinkTarget...)
}

// endregion ///////////////////////////////////////////////////////////////////////////////////////////////////////////
